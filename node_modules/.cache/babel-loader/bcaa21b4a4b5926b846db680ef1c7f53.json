{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kodragjini\\\\Documents\\\\React\\\\notes-app\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport NoteForm from \"./components/NoteForm\";\nimport * as uuid from \"uuid\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport SingleNote from \"./components/SingleNote\";\n\nfunction App() {\n  // State Hooks\n  const [notes, setNotes] = useState([]);\n  const [editing, setEditing] = useState(false);\n  const [show, setShow] = useState(false);\n  const [isClicked, setIsClicked] = useState(false);\n  const [filter, setFilter] = useState(\"\"); // Event Handlers\n\n  const handleClose = () => {\n    setShow(false);\n    setEditing(false);\n  };\n\n  const handleShow = () => {\n    setShow(true);\n    setIsClicked(false);\n  };\n\n  const handleEdit = () => setEditing(true);\n\n  function handleAdd() {\n    setIsClicked(true);\n  }\n\n  function handleCancel() {\n    setIsClicked(false);\n  }\n\n  function handleSubmittedNote(note) {\n    note.id = uuid.v4();\n    setShow(false);\n    setNotes([...notes, note]);\n  }\n\n  function handleEditCancel() {\n    setEditing(false);\n  }\n\n  function handleDelete(note) {\n    const newNotes = notes.filter(noteIndex => noteIndex.id !== note.id);\n    setShow(false);\n    setNotes(newNotes);\n  }\n\n  function handleSubmitChanges(note) {\n    let newEdittedNotes = [...notes];\n    const index = newEdittedNotes.findIndex(oldNote => oldNote.id === note.id);\n    newEdittedNotes[index] = note;\n    setNotes(newEdittedNotes);\n    setEditing(false);\n  }\n\n  function handleFilter(event) {\n    setFilter(event.target.value);\n    const filteredList = notes.filter(note => note.title.contains(filter));\n    console.log(filteredList);\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Notes App\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"add-button\",\n    onClick: handleAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Add new Note\")), isClicked ? /*#__PURE__*/React.createElement(NoteForm, {\n    handleSubmittedNote: handleSubmittedNote,\n    handleCancel: handleCancel,\n    disabled: editing,\n    initialValues: {\n      title: \"\",\n      description: \"\",\n      category: \"General\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Filter by title\",\n    value: filter,\n    onChange: handleFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  })), notes.map(note => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"single-note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SingleNote, {\n    key: note.id,\n    note: note,\n    editing: editing,\n    show: show,\n    handleShow: handleShow,\n    handleClose: handleClose,\n    handleEdit: handleEdit,\n    initialValues: {\n      title: note.title,\n      description: note.description,\n      category: note.category,\n      id: note.id\n    },\n    handleEditCancel: handleEditCancel,\n    handleDelete: handleDelete,\n    handleSubmitChanges: handleSubmitChanges,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Kodragjini/Documents/React/notes-app/src/App.js"],"names":["React","useState","NoteForm","uuid","Container","Row","Col","Button","SingleNote","App","notes","setNotes","editing","setEditing","show","setShow","isClicked","setIsClicked","filter","setFilter","handleClose","handleShow","handleEdit","handleAdd","handleCancel","handleSubmittedNote","note","id","v4","handleEditCancel","handleDelete","newNotes","noteIndex","handleSubmitChanges","newEdittedNotes","index","findIndex","oldNote","handleFilter","event","target","value","filteredList","title","contains","console","log","description","category","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport NoteForm from \"./components/NoteForm\";\nimport * as uuid from \"uuid\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport SingleNote from \"./components/SingleNote\";\n\nfunction App() {\n  // State Hooks\n  const [notes, setNotes] = useState([]);\n  const [editing, setEditing] = useState(false);\n  const [show, setShow] = useState(false);\n\n  const [isClicked, setIsClicked] = useState(false);\n  const [filter, setFilter] = useState(\"\");\n\n  // Event Handlers\n  const handleClose = () => {\n    setShow(false);\n    setEditing(false);\n  };\n\n  const handleShow = () => {\n    setShow(true);\n    setIsClicked(false);\n  };\n  const handleEdit = () => setEditing(true);\n\n  function handleAdd() {\n    setIsClicked(true);\n  }\n\n  function handleCancel() {\n    setIsClicked(false);\n  }\n  function handleSubmittedNote(note) {\n    note.id = uuid.v4();\n    setShow(false);\n    setNotes([...notes, note]);\n  }\n\n  function handleEditCancel() {\n    setEditing(false);\n  }\n\n  function handleDelete(note) {\n    const newNotes = notes.filter((noteIndex) => noteIndex.id !== note.id);\n    setShow(false);\n    setNotes(newNotes);\n  }\n\n  function handleSubmitChanges(note) {\n    let newEdittedNotes = [...notes];\n    const index = newEdittedNotes.findIndex(\n      (oldNote) => oldNote.id === note.id\n    );\n    newEdittedNotes[index] = note;\n    setNotes(newEdittedNotes);\n\n    setEditing(false);\n  }\n\n  function handleFilter(event) {\n    setFilter(event.target.value);\n    const filteredList = notes.filter((note) => note.title.contains(filter));\n    console.log(filteredList);\n  }\n\n  return (\n    <Container className=\"App\">\n      <Row>\n        <Col className=\"column\">\n          <div className=\"logo\">Notes App</div>\n          <div>\n            <Button className=\"add-button\" onClick={handleAdd}>\n              Add new Note\n            </Button>\n          </div>\n          {isClicked ? (\n            <NoteForm\n              handleSubmittedNote={handleSubmittedNote}\n              handleCancel={handleCancel}\n              disabled={editing}\n              initialValues={{\n                title: \"\",\n                description: \"\",\n                category: \"General\",\n              }}\n            />\n          ) : (\n            <div></div>\n          )}\n        </Col>\n        <Col>\n          <Row>\n            <Col>\n              <input\n                type=\"text\"\n                placeholder=\"Filter by title\"\n                value={filter}\n                onChange={handleFilter}\n              />\n            </Col>\n            <Col></Col>\n          </Row>\n          {notes.map((note) => (\n            <div className=\"single-note\">\n              <SingleNote\n                key={note.id}\n                note={note}\n                editing={editing}\n                show={show}\n                handleShow={handleShow}\n                handleClose={handleClose}\n                handleEdit={handleEdit}\n                initialValues={{\n                  title: note.title,\n                  description: note.description,\n                  category: note.category,\n                  id: note.id,\n                }}\n                handleEditCancel={handleEditCancel}\n                handleDelete={handleDelete}\n                handleSubmitChanges={handleSubmitChanges}\n              />\n            </div>\n          ))}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}