{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kodragjini\\\\Documents\\\\React\\\\notes-app\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport NoteForm from \"./components/NoteForm\";\nimport * as uuid from \"uuid\";\nimport { Container, Row, Col, Button, Card } from \"react-bootstrap\";\n\nfunction App() {\n  // State Hooks\n  const [notes, setNotes] = useState([]);\n  const [isClicked, setIsClicked] = useState(false); // Event Handlers\n\n  function handleSearch() {}\n\n  function handleSort() {}\n\n  function handleAdd() {\n    setIsClicked(true);\n  }\n\n  function handleCancel() {\n    setIsClicked(false);\n  }\n\n  function handleView() {}\n\n  function handleDelete() {}\n\n  function handleSubmittedNote(note) {\n    note.id = uuid.v4();\n    setNotes([...notes, note]);\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, notes.map(note => /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, note.category), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, note.title), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"More...\"))))), /*#__PURE__*/React.createElement(Col, {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Notes App\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"add-button\",\n    onClick: handleAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Add new Note\")), isClicked ? /*#__PURE__*/React.createElement(NoteForm, {\n    handleSubmittedNote: handleSubmittedNote,\n    handleCancel: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Kodragjini/Documents/React/notes-app/src/App.js"],"names":["React","useState","NoteForm","uuid","Container","Row","Col","Button","Card","App","notes","setNotes","isClicked","setIsClicked","handleSearch","handleSort","handleAdd","handleCancel","handleView","handleDelete","handleSubmittedNote","note","id","v4","map","category","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,MAA9B,EAAsCC,IAAtC,QAAkD,iBAAlD;;AAEA,SAASC,GAAT,GAAe;AACb;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C,CAJa,CAMb;;AACA,WAASa,YAAT,GAAwB,CAAE;;AAC1B,WAASC,UAAT,GAAsB,CAAE;;AACxB,WAASC,SAAT,GAAqB;AACnBH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAED,WAASI,YAAT,GAAwB;AACtBJ,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AACD,WAASK,UAAT,GAAsB,CAAE;;AACxB,WAASC,YAAT,GAAwB,CAAE;;AAC1B,WAASC,mBAAT,CAA6BC,IAA7B,EAAmC;AACjCA,IAAAA,IAAI,CAACC,EAAL,GAAUnB,IAAI,CAACoB,EAAL,EAAV;AACAZ,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWW,IAAX,CAAD,CAAR;AACD;;AAED,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,KAAK,CAACc,GAAN,CAAWH,IAAD,iBACT,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcA,IAAI,CAACI,QAAnB,CADF,eAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaJ,IAAI,CAACK,KAAlB,CADF,eAGE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CAFF,CADD,CADH,CADF,eAaE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAA+B,IAAA,OAAO,EAAEV,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAFF,EAOGJ,SAAS,gBACR,oBAAC,QAAD;AACE,IAAA,mBAAmB,EAAEQ,mBADvB;AAEE,IAAA,YAAY,EAAEH,YAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,gBAMR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CAbF,CADF,CADF;AAkCD;;AAED,eAAeR,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport NoteForm from \"./components/NoteForm\";\nimport * as uuid from \"uuid\";\nimport { Container, Row, Col, Button, Card } from \"react-bootstrap\";\n\nfunction App() {\n  // State Hooks\n  const [notes, setNotes] = useState([]);\n\n  const [isClicked, setIsClicked] = useState(false);\n\n  // Event Handlers\n  function handleSearch() {}\n  function handleSort() {}\n  function handleAdd() {\n    setIsClicked(true);\n  }\n\n  function handleCancel() {\n    setIsClicked(false);\n  }\n  function handleView() {}\n  function handleDelete() {}\n  function handleSubmittedNote(note) {\n    note.id = uuid.v4();\n    setNotes([...notes, note]);\n  }\n\n  return (\n    <Container className=\"App\">\n      <Row>\n        <Col>\n          {notes.map((note) => (\n            <Card>\n              <Card.Header>{note.category}</Card.Header>\n              <Card.Body>\n                <Card.Title>{note.title}</Card.Title>\n\n                <Button variant=\"primary\">More...</Button>\n              </Card.Body>\n            </Card>\n          ))}\n        </Col>\n        <Col className=\"column\">\n          <div className=\"logo\">Notes App</div>\n          <div>\n            <Button className=\"add-button\" onClick={handleAdd}>\n              Add new Note\n            </Button>\n          </div>\n          {isClicked ? (\n            <NoteForm\n              handleSubmittedNote={handleSubmittedNote}\n              handleCancel={handleCancel}\n            />\n          ) : (\n            <div></div>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}