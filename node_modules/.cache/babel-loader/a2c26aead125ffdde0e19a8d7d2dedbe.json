{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kodragjini\\\\Documents\\\\React\\\\notes-app\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport NoteForm from \"./components/NoteForm\";\nimport * as uuid from \"uuid\";\n\nfunction App() {\n  // State Hooks\n  const [notes, setNotes] = useState([]);\n  const [isClicked, setIsClicked] = useState(false); // Event Handlers\n\n  function handleSearch() {}\n\n  function handleSort() {}\n\n  function handleAdd() {\n    setIsClicked(true);\n  }\n\n  function handleCancel() {\n    setIsClicked(false);\n  }\n\n  function handleView() {}\n\n  function handleDelete() {}\n\n  function handleSubmittedNote(note) {\n    note.id = uuid.v4();\n    setNotes([...notes, note]);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, \"Notes App\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Add new Note\"), isClicked ? /*#__PURE__*/React.createElement(NoteForm, {\n    handleSubmittedNote: handleSubmittedNote,\n    handleCancel: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), notes.map(note => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, note.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, note.description))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Kodragjini/Documents/React/notes-app/src/App.js"],"names":["React","useState","NoteForm","uuid","App","notes","setNotes","isClicked","setIsClicked","handleSearch","handleSort","handleAdd","handleCancel","handleView","handleDelete","handleSubmittedNote","note","id","v4","map","title","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;;AAEA,SAASC,GAAT,GAAe;AACb;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C,CAJa,CAMb;;AACA,WAASQ,YAAT,GAAwB,CAAE;;AAC1B,WAASC,UAAT,GAAsB,CAAE;;AACxB,WAASC,SAAT,GAAqB;AACnBH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAED,WAASI,YAAT,GAAwB;AACtBJ,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AACD,WAASK,UAAT,GAAsB,CAAE;;AACxB,WAASC,YAAT,GAAwB,CAAE;;AAC1B,WAASC,mBAAT,CAA6BC,IAA7B,EAAmC;AACjCA,IAAAA,IAAI,CAACC,EAAL,GAAUd,IAAI,CAACe,EAAL,EAAV;AACAZ,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWW,IAAX,CAAD,CAAR;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEE;AAAQ,IAAA,OAAO,EAAEL,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGGJ,SAAS,gBACR,oBAAC,QAAD;AACE,IAAA,mBAAmB,EAAEQ,mBADvB;AAEE,IAAA,YAAY,EAAEH,YAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,gBAMR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAWGP,KAAK,CAACc,GAAN,CAAWH,IAAD,iBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACI,KAAV,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,IAAI,CAACK,WAAT,CAFF,CADD,CAXH,CADF;AAoBD;;AAED,eAAejB,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport NoteForm from \"./components/NoteForm\";\nimport * as uuid from \"uuid\";\n\nfunction App() {\n  // State Hooks\n  const [notes, setNotes] = useState([]);\n\n  const [isClicked, setIsClicked] = useState(false);\n\n  // Event Handlers\n  function handleSearch() {}\n  function handleSort() {}\n  function handleAdd() {\n    setIsClicked(true);\n  }\n\n  function handleCancel() {\n    setIsClicked(false);\n  }\n  function handleView() {}\n  function handleDelete() {}\n  function handleSubmittedNote(note) {\n    note.id = uuid.v4();\n    setNotes([...notes, note]);\n  }\n\n  return (\n    <div className=\"App\">\n      Notes App\n      <button onClick={handleAdd}>Add new Note</button>\n      {isClicked ? (\n        <NoteForm\n          handleSubmittedNote={handleSubmittedNote}\n          handleCancel={handleCancel}\n        />\n      ) : (\n        <div></div>\n      )}\n      {notes.map((note) => (\n        <div>\n          <h1>{note.title}</h1>\n          <p>{note.description}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}